install.packages("geodata")
library(geodata)
library(raster)
library(sp)
library(rgdal)


##### 拼接 ####
library(raster)
tif_file_name <- list.files(path = r"(/Users/lemon/Downloads/clay_0_5)", pattern = ".tif$", full.names = TRUE, ignore.case = TRUE)
tif_file_list <- list()
for (i in 1:length(tif_file_name)){
    tif_file_list[i] <- raster(tif_file_name[i])
  }

tif_file_list$fun <- max
tif_file_list$na.rm <- TRUE
tif_mosaic <- do.call(mosaic, tif_file_list)
plot(tif_mosaic)

# tif_merge <- do.call(merge, tif_file_list) # 方法选择merge和mosaic对于结果没有区别，一般来说mosaic优先

rf <- writeRaster(tif_mosaic, filename = r"(/Users/lemon/Downloads/clay_0_5/clay_0_5cm.tif)", overwrite = TRUE)

##### 批量合并并且后台 #####
job::job(
  {tif_file_name1 <- list.files(path = r"(/Users/lemon/Downloads/clay_0_5)", pattern = ".tif$", full.names = TRUE, ignore.case = TRUE)
  tif_file_list1 <- list()
  for (i in 1:length(tif_file_name1)){
    tif_file_list1[i] <- raster(tif_file_name1[i])
  }
  tif_file_list1$fun <- max
  tif_file_list1$na.rm <- TRUE
  tif_mosaic1 <- do.call(mosaic, tif_file_list1)
  rf1 <- writeRaster(tif_mosaic1, filename = r"(/Users/lemon/Downloads/clay_0_5/clay_5_15cm.tif)", overwrite = TRUE)},
  title = 'silt 5-15 cm')


job::job(
  {tif_file_name <- list.files(path = r"(/Users/lemon/Downloads/clay_0_5/1)", pattern = ".tif$", full.names = TRUE, ignore.case = TRUE)
  tif_file_list <- list()
  for (i in 1:length(tif_file_name)){
    tif_file_list[i] <- raster(tif_file_name[i])
  }
  tif_file_list$fun <- max
  tif_file_list$na.rm <- TRUE
  tif_mosaic <- do.call(mosaic, tif_file_list)
  rf <- writeRaster(tif_mosaic, filename = r"(/Users/lemon/Downloads/clay_0_5/1/silt_5_15cm.tif)", overwrite = TRUE)},
  title = 'silt 5-15 cm')

##### 提取 #####
library(rgdal)
library(raster)
library(sp)
#导入经纬度数据
location_site <-read.xlsx("/Users/lemon/Desktop/目前的需要做的事情/Data_analysis/ranran/location_site.xlsx", 1)
head(location_site)

#导入tif数据
# 指定文件夹路径和关键词
folder_path <- "/Volumes/lemon/soilgrids_merged/"
TN_keyword <- "TN"
SOC_keyword <- "SOC"
pH_keyword <- "pH"
clay_keyword <- "clay"
sand_keyword <- "sand"
silt_keyword <- "silt"

# 获取符合关键词的文件列表
file_list_SOC <- list.files(path = folder_path, pattern = paste0(SOC_keyword, ".*\\.tif$"), full.names = TRUE)
file_list_TN <- list.files(path = folder_path, pattern = paste0(TN_keyword, ".*\\.tif$"), full.names = TRUE)
file_list_pH <- list.files(path = folder_path, pattern = paste0(pH_keyword, ".*\\.tif$"), full.names = TRUE)
file_list_clay <- list.files(path = folder_path, pattern = paste0(clay_keyword, ".*\\.tif$"), full.names = TRUE)
file_list_sand <- list.files(path = folder_path, pattern = paste0(sand_keyword, ".*\\.tif$"), full.names = TRUE)
file_list_silt <- list.files(path = folder_path, pattern = paste0(silt_keyword, ".*\\.tif$"), full.names = TRUE)

# 循环导入文件并按照文件名称保存在R中
for (file in file_list_SOC) {
  # 提取文件名作为变量名
  var_name <- gsub(".tif", "", basename(file))
  assign(var_name, raster(file))
}
for (file in file_list_TN) {
  # 提取文件名作为变量名
  var_name <- gsub(".tif", "", basename(file))
  assign(var_name, raster(file))
}
for (file in file_list_pH) {
  # 提取文件名作为变量名
  var_name <- gsub(".tif", "", basename(file))
  assign(var_name, raster(file))
}
for (file in file_list_clay) {
  # 提取文件名作为变量名
  var_name <- gsub(".tif", "", basename(file))
  assign(var_name, raster(file))
}

for (file in file_list_sand) {
  # 提取文件名作为变量名
  var_name <- gsub(".tif", "", basename(file))
  assign(var_name, raster(file))
}

for (file in file_list_silt) {
  # 提取文件名作为变量名
  var_name <- gsub(".tif", "", basename(file))
  assign(var_name, raster(file))
}

coords <- data.frame(lon = location_site[,2], lat = location_site[,3])
coordinates(coords) <- c("lon","lat")

SOC_0_5 <- raster::extract(x = SOC_0_5cm, y = coords)
SOC_5_15 <- raster::extract(x = SOC_5_15cm, y = coords)
SOC_15_30 <- raster::extract(x = SOC_15_30cm, y = coords)
SOC_30_60 <- raster::extract(x = SOC_30_60cm, y = coords)

TN_0_5 <- raster::extract(x = TN_0_5cm, y = coords)
TN_5_15 <- raster::extract(x = TN_5_15cm, y = coords)
TN_15_30 <- raster::extract(x = TN_15_30cm, y = coords)
TN_30_60 <- raster::extract(x = TN_30_60cm, y = coords)

pH_0_5 <- raster::extract(x = pH_0_5cm, y = coords)
pH_5_15 <- raster::extract(x = pH_5_15cm, y = coords)
pH_15_30 <- raster::extract(x = pH_15_30cm, y = coords)
pH_30_60 <- raster::extract(x = pH_30_60cm, y = coords)

clay_0_5 <- raster::extract(x = clay_0_5cm, y = coords)
clay_5_15 <- raster::extract(x = clay_5_15cm, y = coords)
clay_15_30 <- raster::extract(x = clay_15_30cm, y = coords)
clay_30_60 <- raster::extract(x = clay_30_60cm, y = coords)

sand_0_5 <- raster::extract(x = sand_0_5cm, y = coords)
sand_5_15 <- raster::extract(x = sand_5_15cm, y = coords)
sand_15_30 <- raster::extract(x = sand_15_30cm, y = coords)
sand_30_60 <- raster::extract(x = sand_30_60cm, y = coords)

silt_0_5 <- raster::extract(x = silt_0_5cm, y = coords)
silt_5_15 <- raster::extract(x = silt_5_15cm, y = coords)
silt_15_30 <- raster::extract(x = silt_15_30cm, y = coords)
silt_30_60 <- raster::extract(x = silt_30_60cm, y = coords)


data_all <- data.frame(location_site, SOC_0_5, SOC_5_15, SOC_15_30, SOC_30_60, TN_0_5, TN_5_15, TN_15_30, TN_30_60,
                         pH_0_5, pH_5_15, pH_15_30, pH_30_60, clay_0_5, clay_5_15, clay_15_30, clay_30_60,
                         sand_0_5, sand_5_15, sand_15_30, sand_30_60, silt_0_5, silt_5_15, silt_15_30, silt_30_60)
head(data_all)

library(dplyr)

data_all_updated <- data_all %>%
  mutate_at(vars(contains("SOC")), list(~ ./10)) %>%
  mutate_at(vars(contains("TN")), list(~ ./1000)) %>%
  mutate_at(vars(contains("pH")), list(~ ./10)) %>%
  mutate_at(vars(contains("clay")), list(~ ./10)) %>%
  mutate_at(vars(contains("sand")), list(~ ./10)) %>%
  mutate_at(vars(contains("silt")), list(~ ./10)) %>%
  mutate_at(vars(contains("SOC")), list(~ replace(., . == 0, NA))) %>%
  mutate_at(vars(contains("TN")), list(~ replace(., . == 0, NA))) %>%
  mutate_at(vars(contains("pH")), list(~ replace(., . == 0, NA))) %>%
  mutate_at(vars(contains("clay")), list(~ replace(., . == 0, NA))) %>%
  mutate_at(vars(contains("sand")), list(~ replace(., . == 0, NA))) %>%
  mutate_at(vars(contains("silt")), list(~ replace(., . == 0, NA)))
head(data_all_updated)

##### 将不同深度的数据对应到我们提取的数据集中
data <- read.csv('C:\\Users\\ling\\Documents\\导出的文件\\meta_soilgrids_1km.csv') # 读取文件
head(data)
variables <- c("silt", "SOC", "TN", "pH", "clay", "sand") # 设置变量
for (var in variables) {
  data <- data %>%
    mutate({{var}} := NA)
} # 在数据集data中添加这些变量

# 循环遍历每个变量，进行相同的操作
for (var in variables) {
  data[[var]] <- ifelse(data$depth1 == "0-5", data[[paste0(var, "_0_5")]],
                        ifelse(data$depth1 == "5-15", data[[paste0(var, "_5_15")]],
                               ifelse(data$depth1 == "15-30", data[[paste0(var, "_15_30")]],
                                      ifelse(data$depth1 == "30-60", data[[paste0(var, "_30_60")]],
                                             NA))))
}
write.csv(data, file = "dwefopp.csv") # 写出文件



###### 提取温度和降雨数据 #####
library(raster)
## Loading required package: sp
library(openxlsx)

location_site <- read.xlsx('/Users/lemon/Downloads/Climate data to LJ.xlsx', 1)
head(location_site)

coords <- data.frame(lon = location_site[,3], lat = location_site[,2])
coordinates(coords) <- c("lon","lat")

# 设置文件夹路径
folder_tavg_path <- "/Volumes/lemon/wc2.1_30s_tavg"

# 获取文件夹中所有.tif文件的文件名
tif_files <- list.files(path = folder_tavg_path, pattern = "\\.tif$", full.names = TRUE)

# 循环读取并赋值给R环境中的对象
for (file in tif_files) {
  # 使用assign()函数将数据赋值给R环境中的对象，对象名使用文件名
  assign(basename(file), raster::raster(file))
}

avg_1 <- raster::extract(x = wc2.1_30s_tavg_01.tif, y = coords)
avg_2 <- raster::extract(x = wc2.1_30s_tavg_02.tif, y = coords)
avg_3 <- raster::extract(x = wc2.1_30s_tavg_03.tif, y = coords)
avg_4 <- raster::extract(x = wc2.1_30s_tavg_04.tif, y = coords)
avg_5 <- raster::extract(x = wc2.1_30s_tavg_05.tif, y = coords)
avg_6 <- raster::extract(x = wc2.1_30s_tavg_06.tif, y = coords)
avg_7 <- raster::extract(x = wc2.1_30s_tavg_07.tif, y = coords)
avg_8 <- raster::extract(x = wc2.1_30s_tavg_08.tif, y = coords)
avg_9 <- raster::extract(x = wc2.1_30s_tavg_09.tif, y = coords)
avg_10 <- raster::extract(x = wc2.1_30s_tavg_10.tif, y = coords)
avg_11 <- raster::extract(x = wc2.1_30s_tavg_11.tif, y = coords)
avg_12 <- raster::extract(x = wc2.1_30s_tavg_12.tif, y = coords)

data_all <- data.frame(location_site, avg_1, avg_2, avg_3, avg_4, avg_5, avg_6, avg_7, avg_8, avg_9, avg_10, avg_11, avg_12)
head(data_all)

data_all$avg_annual <- rowMeans(data_all[5:16]) # 计算年均温

# 设置文件夹路径
folder_prec_path <- "/Volumes/lemon/wc2.1_30s_prec"

# 获取文件夹中所有.tif文件的文件名
tif_files <- list.files(path = folder_prec_path, pattern = "\\.tif$", full.names = TRUE)

# 循环读取并赋值给R环境中的对象
for (file in tif_files) {
  # 使用assign()函数将数据赋值给R环境中的对象，对象名使用文件名
  assign(basename(file), raster::raster(file))
}

prec_1 <- raster::extract(x = wc2.1_30s_prec_01.tif, y = coords)
prec_2 <- raster::extract(x = wc2.1_30s_prec_02.tif, y = coords)
prec_3 <- raster::extract(x = wc2.1_30s_prec_03.tif, y = coords)
prec_4 <- raster::extract(x = wc2.1_30s_prec_04.tif, y = coords)
prec_5 <- raster::extract(x = wc2.1_30s_prec_05.tif, y = coords)
prec_6 <- raster::extract(x = wc2.1_30s_prec_06.tif, y = coords)
prec_7 <- raster::extract(x = wc2.1_30s_prec_07.tif, y = coords)
prec_8 <- raster::extract(x = wc2.1_30s_prec_08.tif, y = coords)
prec_9 <- raster::extract(x = wc2.1_30s_prec_09.tif, y = coords)
prec_10 <- raster::extract(x = wc2.1_30s_prec_10.tif, y = coords)
prec_11 <- raster::extract(x = wc2.1_30s_prec_11.tif, y = coords)
prec_12 <- raster::extract(x = wc2.1_30s_prec_12.tif, y = coords)

data_all_1 <- data.frame(location_site, prec_1, prec_2, prec_3, prec_4, prec_5, prec_6, prec_7, prec_8, prec_9, prec_10, prec_11, prec_12)
head(data_all_1)

data_all_1$prec_annual <- rowMeans(data_all_1[5:16]) # 计算年均温

cbind(data_all, data_all_1$prec_annual) -> all_data

write.csv(all_data, 'all_data.csv')
